---
description: Mobile UI, responsive design, PWA features, touch optimization. Triggers: mobile, PWA, responsive, touch, service-worker, manifest, offline, breakpoints.
globs: 
alwaysApply: false
---
# ðŸ“± MMM Checklist - Mobile & PWA KurallarÄ±

## Mobile-First Design (Zorunlu)
```javascript
// âœ… Responsive breakpoint pattern
sx={{
  padding: { xs: 1, sm: 2, md: 3 },
  fontSize: { xs: '0.875rem', sm: '1rem', md: '1.125rem' },
  display: { xs: 'block', md: 'flex' }
}}

// âœ… Touch-friendly elements
sx={{
  minHeight: 44,        // Apple HIG minimum
  minWidth: 44,         // Touch target size
  padding: { xs: 2 }    // Sufficient spacing
}}
```

## PWA Implementation (Zorunlu)
```javascript
// âœ… Service Worker registration
import { registerServiceWorker } from "./utils/cachingStrategy";

// App.js'de initialize
useEffect(() => {
  registerServiceWorker();
  initCacheStrategy();
}, []);

// âœ… Offline detection
const [isOnline, setIsOnline] = useState(navigator.onLine);

useEffect(() => {
  const handleOnline = () => setIsOnline(true);
  const handleOffline = () => setIsOnline(false);
  
  window.addEventListener('online', handleOnline);
  window.addEventListener('offline', handleOffline);
  
  return () => {
    window.removeEventListener('online', handleOnline);
    window.removeEventListener('offline', handleOffline);
  };
}, []);
```

## Responsive Grid System
```javascript
// âœ… Standard responsive grid
<Grid container spacing={{ xs: 1, sm: 2, md: 3 }}>
  <Grid item xs={12} sm={6} md={4}>
    <Card /> // Full mobile, half tablet, third desktop
  </Grid>
</Grid>

// âœ… Container responsive
<Container maxWidth={{ xs: 'sm', md: 'lg' }}>
  <Typography variant={{ xs: 'h6', md: 'h4' }}>
    Responsive Title
  </Typography>
</Container>
```

## Touch & Gesture Support
```javascript
// âœ… Touch event handling
const handleTouchStart = (e) => {
  const touch = e.touches[0];
  setTouchStart({ x: touch.clientX, y: touch.clientY });
};

const handleTouchEnd = (e) => {
  const touch = e.changedTouches[0];
  const deltaX = touch.clientX - touchStart.x;
  
  if (Math.abs(deltaX) > 50) {
    // Swipe detected
    deltaX > 0 ? handleSwipeRight() : handleSwipeLeft();
  }
};
```

## Progressive Web App Manifest
```json
// âœ… public/manifest.json
{
  "short_name": "MMM Checklist",
  "name": "MMM Checklist Sistemi",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}
```

## Offline Support
```javascript
// âœ… Offline data caching
const offlineCache = {
  save: (key, data) => {
    localStorage.setItem(`offline_${key}`, JSON.stringify({
      data,
      timestamp: Date.now()
    }));
  },
  
  get: (key, maxAge = 300000) => { // 5 min default
    const cached = localStorage.getItem(`offline_${key}`);
    if (!cached) return null;
    
    const { data, timestamp } = JSON.parse(cached);
    if (Date.now() - timestamp > maxAge) return null;
    
    return data;
  }
};
```

## Mobile Navigation
```javascript
// âœ… Bottom navigation for mobile
const MobileBottomNav = () => {
  const [value, setValue] = useState(0);
  
  return (
    <Paper 
      sx={{ 
        position: 'fixed', 
        bottom: 0, 
        left: 0, 
        right: 0,
        display: { xs: 'block', md: 'none' }
      }}
    >
      <BottomNavigation value={value} onChange={(e, newValue) => setValue(newValue)}>
        <BottomNavigationAction label="Dashboard" icon={<DashboardIcon />} />
        <BottomNavigationAction label="Tasks" icon={<TaskIcon />} />
        <BottomNavigationAction label="Profile" icon={<PersonIcon />} />
      </BottomNavigation>
    </Paper>
  );
};
```

## Performance for Mobile
```javascript
// âœ… Image optimization
const OptimizedImage = ({ src, alt }) => {
  const [imageError, setImageError] = useState(false);
  
  return imageError ? (
    <Skeleton variant="rectangular" width="100%" height={200} />
  ) : (
    <img 
      src={src}
      alt={alt}
      loading="lazy"
      style={{ 
        width: '100%', 
        height: 'auto',
        maxWidth: '100%'
      }}
      onError={() => setImageError(true)}
    />
  );
};
```

## Accessibility (A11y) for Mobile
```javascript
// âœ… Screen reader support
<Button
  aria-label="GÃ¶rev ekle"
  sx={{ 
    minHeight: 44,
    '&:focus': {
      outline: '2px solid #1976d2',
      outlineOffset: '2px'
    }
  }}
>
  <AddIcon />
  <span className="sr-only">Yeni gÃ¶rev ekle</span>
</Button>

// âœ… High contrast support
const theme = createTheme({
  palette: {
    mode: prefersDarkMode ? 'dark' : 'light',
    primary: {
      main: '#1976d2',
      contrastText: '#ffffff'
    }
  }
});
```

## Mobile Testing Checklist
- [ ] Touch targets minimum 44px
- [ ] Offline functionality works
- [ ] PWA installable
- [ ] Service Worker caching
- [ ] Responsive on all breakpoints
- [ ] Fast loading (< 3s)
- [ ] Swipe gestures work
- [ ] Bottom navigation accessible 