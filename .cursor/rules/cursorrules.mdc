---
description: 
globs: 
alwaysApply: true
---
# 🎯 MMM Checklist Sistemi - Orchestrator

Bu proje **world-class enterprise code quality** standartlarında **modüler cursor rules** sistemi ile geliştirilmektedir.

## 📋 Modüler Kural Sistemi (15 Modules)

- 🎯 **[Core](mdc:.cursor/rules/core-cursor.mdc)** → Dil standartları, dosya adlandırma
- ⚛️ **[Frontend](mdc:.cursor/rules/frontend-cursor.mdc)** → React, Material-UI, state management
- 🔧 **[Backend](mdc:.cursor/rules/backend-cursor.mdc)** → Node.js/Express, API patterns
- 📊 **[ESLint & Performance](mdc:.cursor/rules/eslint-performance-cursor.mdc)** → Code quality, bundle optimization
- 🔐 **[Security](mdc:.cursor/rules/security-cursor.mdc)** → Authentication, input validation
- 📱 **[Mobile & PWA](mdc:.cursor/rules/mobile-pwa-cursor.mdc)** → Responsive design, PWA features
- 🚀 **[Deployment](mdc:.cursor/rules/deployment-cursor.mdc)** → CI/CD, production readiness
- 🗄️ **[Database](mdc:.cursor/rules/database-cursor.mdc)** → MongoDB optimization, queries
- 🧪 **[Testing](mdc:.cursor/rules/testing-cursor.mdc)** → Jest patterns, coverage
- 📚 **[API Documentation](mdc:.cursor/rules/api-documentation-cursor.mdc)** → Swagger/OpenAPI
- 📊 **[Data Management](mdc:.cursor/rules/data-management-cursor.mdc)** → Excel import/export
- 📈 **[Monitoring & Logging](mdc:.cursor/rules/monitoring-logging-cursor.mdc)** → Error tracking
- 🔧 **[Maintenance](mdc:.cursor/rules/maintenance-cursor.mdc)** → System cleanup, automation
- 🐛 **[Debugging](mdc:.cursor/rules/debugging-troubleshooting-cursor.mdc)** → Port conflicts, compatibility
- 🔴 **[Meeting & Real-time](mdc:.cursor/rules/meeting-realtime-cursor.mdc)** → Live meetings, Socket.IO, collaboration

## 🚨 Quality Enforcements

- **ESLint**: 0 errors, 0 warnings ✅
- **Bundle Size**: < 600KB ✅
- **Performance**: < 200ms API ✅
- **Security**: OWASP compliant ✅
- **Mobile**: Touch-friendly ✅

## 🎯 Sistem Özellikleri

- **Bundle**: 506KB (2MB'den %75 azalma)
- **Performance**: 1000x hızlanma
- **PWA Score**: 95+ Lighthouse
- **Code Splitting**: React.lazy() aktif
- **Caching**: 3-tier system

## ⭐ Bugünkü Güncellemeler (2025-01-21)

### 🔴 Meeting Module Real-time Collaboration (PHASE 8-10 COMPLETED)
- **Live Meeting Interface**: Socket.IO real-time collaboration system active
- **Collaborative Notes**: Multi-user synchronized editing with typing indicators
- **Live Participants**: Real-time presence, join/leave notifications, role-based UI
- **Meeting Timer**: Live duration tracking with status broadcasting
- **Analytics Dashboard**: Recharts integration with KPI cards and interactive charts
- **Email Notifications**: Professional templates with Turkish support

### 📡 Socket.IO Infrastructure
- **Meeting Room Management**: Dynamic room creation and participant tracking
- **Real-time Events**: 6 meeting-specific socket events implemented
- **Typing Indicators**: Debounced typing status with automatic cleanup
- **Connection Recovery**: Automatic reconnection and meeting rejoin
- **Performance**: WebSocket-based low-latency communication

### ⚛️ Frontend Architecture
- **Live Meeting Page**: Tab-based interface (notes, agenda, participants)
- **useLiveMeeting Hook**: Real-time state management with socket integration
- **React.memo Components**: Performance-optimized real-time UI updates
- **Route Integration**: `/meetings/:id/live` dynamic routing with permissions
- **Pulse Animation**: Live meeting button with CSS keyframes

### 🔧 Backend Integration
- **Socket Service**: Meeting-specific event handlers and room management
- **Email Service**: Nodemailer + EJS templates for professional notifications
- **Analytics API**: 6 endpoints for dashboard metrics with role-based access
- **Meeting API Extensions**: Real-time status updates and participant management

### Cursor Rules Evolution
- **New Module**: meeting-realtime-cursor.mdc (15th module) created
- **Context-Aware Rules**: Live Meeting/Socket.IO automatic rule selection
- **AI Integration**: MCP tools enabled for automatic rule management
- **Pattern Documentation**: Real-time collaboration patterns established

## 🔧 Otomatik Güncellemeler

**AI Davranışı:** Projede yapılan değişiklik hangi kuralı ilgilendiriyorsa o kuralı otomatik günceller. Kullanıcıya öneri sormaz, direkt uygun modülü günceller.

### Context-Aware Rule Selection

- **React dosyası** → frontend-cursor.mdc
- **API route** → backend-cursor.mdc + security-cursor.mdc
- **Database model** → database-cursor.mdc
- **Test dosyası** → testing-cursor.mdc
- **Port/Debug hata** → debugging-troubleshooting-cursor.mdc
- **Live Meeting/Socket.IO** → meeting-realtime-cursor.mdc + frontend-cursor.mdc
- **Meeting API/Routes** → meeting-realtime-cursor.mdc + backend-cursor.mdc
- **Analytics/Dashboard** → meeting-realtime-cursor.mdc + data-management-cursor.mdc
- **Real-time hooks** → meeting-realtime-cursor.mdc + frontend-cursor.mdc

## 🎯 Manuel Aktivasyon

```bash
@.cursor/rules/database-cursor.mdc MongoDB optimization
@.cursor/rules/frontend-cursor.mdc @.cursor/rules/mobile-pwa-cursor.mdc
@.cursor/rules/debugging-troubleshooting-cursor.mdc Port conflicts
```

---

**Enterprise-Grade Modular System**: 14 özelleşmiş modül ile otomatik kural yönetimi. Context'e göre akıllı aktivasyon.
